{
	"id": "baf23f45353e3c8181a9bfd335b131ea",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"gisttest.sol": {
				"content": "pragma solidity >=0.5.0 < 0.9.0;\r\n\r\ncontract pay\r\n{\r\n    address payable user=(0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db);\r\n    function payEther() public payable{\r\n\r\n    }\r\n    function getBalance() public view returns (uint){\r\n        return address(this).balance;\r\n    }\r\n    function sendEnderAccount() public{\r\n        user.transfer(2 ether);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"gisttest.sol": {
				"pay": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "payEther",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sendEnderAccount",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"gisttest.sol\":36:358  contract pay\r... */\n  mstore(0x40, 0x80)\n    /* \"gisttest.sol\":79:121  0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db */\n  0x4b20993bc481177ec7e8f571cecae8a9e22c02db\n    /* \"gisttest.sol\":57:122  address payable user=(0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"gisttest.sol\":36:358  contract pay\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"gisttest.sol\":36:358  contract pay\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"gisttest.sol\":36:358  contract pay\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf7474d00\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf795fe6b\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"gisttest.sol\":179:274  function getBalance() public view returns (uint){\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_5:\n        /* \"gisttest.sol\":179:274  function getBalance() public view returns (uint){\r... */\n      pop\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gisttest.sol\":129:173  function payEther() public payable{\r... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"gisttest.sol\":280:355  function sendEnderAccount() public{\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_10:\n        /* \"gisttest.sol\":280:355  function sendEnderAccount() public{\r... */\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"gisttest.sol\":179:274  function getBalance() public view returns (uint){\r... */\n    tag_7:\n        /* \"gisttest.sol\":222:226  uint */\n      0x00\n        /* \"gisttest.sol\":245:266  address(this).balance */\n      selfbalance\n        /* \"gisttest.sol\":238:266  return address(this).balance */\n      swap1\n      pop\n        /* \"gisttest.sol\":179:274  function getBalance() public view returns (uint){\r... */\n      swap1\n      jump\t// out\n        /* \"gisttest.sol\":129:173  function payEther() public payable{\r... */\n    tag_9:\n      jump\t// out\n        /* \"gisttest.sol\":280:355  function sendEnderAccount() public{\r... */\n    tag_12:\n        /* \"gisttest.sol\":325:329  user */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gisttest.sol\":325:338  user.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gisttest.sol\":325:347  user.transfer(2 ether) */\n      0x08fc\n        /* \"gisttest.sol\":339:346  2 ether */\n      0x1bc16d674ec80000\n        /* \"gisttest.sol\":325:347  user.transfer(2 ether) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"gisttest.sol\":325:347  user.transfer(2 ether) */\n      pop\n        /* \"gisttest.sol\":280:355  function sendEnderAccount() public{\r... */\n      jump\t// out\n\n    auxdata: 0xa265627a7a723158206cba341d7dffafc54fbb83ea3e8d4242aa9a5e511666e7eaecef17c5a6003ad464736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052734b20993bc481177ec7e8f571cecae8a9e22c02db6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b50610129806100746000396000f3fe60806040526004361060305760003560e01c806312065fe0146035578063f7474d0014605d578063f795fe6b146065575b600080fd5b348015604057600080fd5b5060476079565b6040518082815260200191505060405180910390f35b60636081565b005b348015607057600080fd5b5060776083565b005b600047905090565b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc671bc16d674ec800009081150290604051600060405180830381858888f1935050505015801560f1573d6000803e3d6000fd5b5056fea265627a7a723158206cba341d7dffafc54fbb83ea3e8d4242aa9a5e511666e7eaecef17c5a6003ad464736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x4B20993BC481177EC7E8F571CECAE8A9E22C02DB PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 DUP1 PUSH2 0x74 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH1 0x35 JUMPI DUP1 PUSH4 0xF7474D00 EQ PUSH1 0x5D JUMPI DUP1 PUSH4 0xF795FE6B EQ PUSH1 0x65 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x47 PUSH1 0x79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x63 PUSH1 0x81 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x77 PUSH1 0x83 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0x1BC16D674EC80000 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH1 0xF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH13 0xBA341D7DFFAFC54FBB83EA3E8D TIMESTAMP TIMESTAMP 0xAA SWAP11 0x5E MLOAD AND PUSH7 0xE7EAECEF17C5A6 STOP GASPRICE 0xD4 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "36:322:0:-;;;79:42;57:65;;;;;;;;;;;;;;;;;;;;36:322;8:9:-1;5:2;;;30:1;27;20:12;5:2;36:322:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361060305760003560e01c806312065fe0146035578063f7474d0014605d578063f795fe6b146065575b600080fd5b348015604057600080fd5b5060476079565b6040518082815260200191505060405180910390f35b60636081565b005b348015607057600080fd5b5060776083565b005b600047905090565b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc671bc16d674ec800009081150290604051600060405180830381858888f1935050505015801560f1573d6000803e3d6000fd5b5056fea265627a7a723158206cba341d7dffafc54fbb83ea3e8d4242aa9a5e511666e7eaecef17c5a6003ad464736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH1 0x35 JUMPI DUP1 PUSH4 0xF7474D00 EQ PUSH1 0x5D JUMPI DUP1 PUSH4 0xF795FE6B EQ PUSH1 0x65 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x47 PUSH1 0x79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x63 PUSH1 0x81 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x77 PUSH1 0x83 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0x1BC16D674EC80000 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH1 0xF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH13 0xBA341D7DFFAFC54FBB83EA3E8D TIMESTAMP TIMESTAMP 0xAA SWAP11 0x5E MLOAD AND PUSH7 0xE7EAECEF17C5A6 STOP GASPRICE 0xD4 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "36:322:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;179:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;179:95:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;129:44;;;:::i;:::-;;280:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;280:75:0;;;:::i;:::-;;179:95;222:4;245:21;238:28;;179:95;:::o;129:44::-;:::o;280:75::-;325:4;;;;;;;;;;;:13;;:22;339:7;325:22;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;325:22:0;280:75::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "59400",
								"executionCost": "20978",
								"totalCost": "80378"
							},
							"external": {
								"getBalance()": "193",
								"payEther()": "120",
								"sendEnderAccount()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 36,
									"end": 358,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 36,
									"end": 358,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 36,
									"end": 358,
									"name": "MSTORE"
								},
								{
									"begin": 79,
									"end": 121,
									"name": "PUSH",
									"value": "4B20993BC481177EC7E8F571CECAE8A9E22C02DB"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "DUP1"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "EXP"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "DUP2"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "SLOAD"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "DUP2"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "MUL"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "NOT"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "AND"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "SWAP1"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "DUP4"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "AND"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "MUL"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "OR"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "SWAP1"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "SSTORE"
								},
								{
									"begin": 57,
									"end": 122,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 358,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 358,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 358,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 358,
									"name": "DUP1"
								},
								{
									"begin": 36,
									"end": 358,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 358,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 358,
									"name": "CODECOPY"
								},
								{
									"begin": 36,
									"end": 358,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 358,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158206cba341d7dffafc54fbb83ea3e8d4242aa9a5e511666e7eaecef17c5a6003ad464736f6c63430005110032",
									".code": [
										{
											"begin": 36,
											"end": 358,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "MSTORE"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "SHR"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "PUSH",
											"value": "12065FE0"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "PUSH",
											"value": "F7474D00"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "PUSH",
											"value": "F795FE6B"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 358,
											"name": "REVERT"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "SWAP2"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "SWAP2"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "RETURN"
										},
										{
											"begin": 129,
											"end": 173,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 129,
											"end": 173,
											"name": "JUMPDEST"
										},
										{
											"begin": 129,
											"end": 173,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 129,
											"end": 173,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 129,
											"end": 173,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 129,
											"end": 173,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 129,
											"end": 173,
											"name": "JUMPDEST"
										},
										{
											"begin": 129,
											"end": 173,
											"name": "STOP"
										},
										{
											"begin": 280,
											"end": 355,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 280,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 280,
											"end": 355,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 280,
											"end": 355,
											"name": "POP"
										},
										{
											"begin": 280,
											"end": 355,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 280,
											"end": 355,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 280,
											"end": 355,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 355,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 280,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 280,
											"end": 355,
											"name": "STOP"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 222,
											"end": 226,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 245,
											"end": 266,
											"name": "SELFBALANCE"
										},
										{
											"begin": 238,
											"end": 266,
											"name": "SWAP1"
										},
										{
											"begin": 238,
											"end": 266,
											"name": "POP"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 179,
											"end": 274,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 129,
											"end": 173,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 129,
											"end": 173,
											"name": "JUMPDEST"
										},
										{
											"begin": 129,
											"end": 173,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 280,
											"end": 355,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 280,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 325,
											"end": 329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 325,
											"end": 329,
											"name": "DUP1"
										},
										{
											"begin": 325,
											"end": 329,
											"name": "SWAP1"
										},
										{
											"begin": 325,
											"end": 329,
											"name": "SLOAD"
										},
										{
											"begin": 325,
											"end": 329,
											"name": "SWAP1"
										},
										{
											"begin": 325,
											"end": 329,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 325,
											"end": 329,
											"name": "EXP"
										},
										{
											"begin": 325,
											"end": 329,
											"name": "SWAP1"
										},
										{
											"begin": 325,
											"end": 329,
											"name": "DIV"
										},
										{
											"begin": 325,
											"end": 329,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 325,
											"end": 329,
											"name": "AND"
										},
										{
											"begin": 325,
											"end": 338,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 325,
											"end": 338,
											"name": "AND"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 339,
											"end": 346,
											"name": "PUSH",
											"value": "1BC16D674EC80000"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "SWAP1"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "DUP2"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "ISZERO"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "MUL"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "SWAP1"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "MLOAD"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "MLOAD"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "DUP1"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "DUP4"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "SUB"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "DUP2"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "DUP6"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "DUP9"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "DUP9"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "CALL"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "SWAP4"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "POP"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "POP"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "POP"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "POP"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 325,
											"end": 347,
											"name": "POP"
										},
										{
											"begin": 280,
											"end": 355,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBalance()": "12065fe0",
							"payEther()": "f7474d00",
							"sendEnderAccount()": "f795fe6b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sendEnderAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"gisttest.sol\":\"pay\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"gisttest.sol\":{\"keccak256\":\"0x16f946c03ef0b8311102f775f1e771857b9ca7ceade6ec6d31bebd86efa0ff21\",\"urls\":[\"bzz-raw://2e3f8d8e321c9e2d6911114454a301d0020e431f38d398e5cc16d3fa9690ee51\",\"dweb:/ipfs/Qmeii1Fb3RpdvejAMXXLz5TS1QzXtsUWjUDdEx5xkrHoFP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "gisttest.sol:pay",
								"label": "user",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"gisttest.sol": {
				"ast": {
					"absolutePath": "gisttest.sol",
					"exportedSymbols": {
						"pay": [
							31
						]
					},
					"id": 32,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 31,
							"linearizedBaseContracts": [
								31
							],
							"name": "pay",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"name": "user",
									"nodeType": "VariableDeclaration",
									"scope": 31,
									"src": "57:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "57:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"argumentTypes": null,
										"components": [
											{
												"argumentTypes": null,
												"hexValue": "307834423230393933426334383131373765633745386635373163654361453841396532324330326462",
												"id": 3,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "79:42:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"value": "0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db"
											}
										],
										"id": 4,
										"isConstant": false,
										"isInlineArray": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "78:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 8,
										"nodeType": "Block",
										"src": "163:10:0",
										"statements": []
									},
									"documentation": null,
									"id": 9,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "payEther",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "146:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:0:0"
									},
									"scope": 31,
									"src": "129:44:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "227:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 15,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "253:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_pay_$31",
																	"typeString": "contract pay"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_pay_$31",
																	"typeString": "contract pay"
																}
															],
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "245:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "245:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "245:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 13,
												"id": 18,
												"nodeType": "Return",
												"src": "238:28:0"
											}
										]
									},
									"documentation": null,
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "198:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "222:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "222:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "221:6:0"
									},
									"scope": 31,
									"src": "179:95:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "314:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "32",
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "339:7:0",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2000000000000000000_by_1",
																"typeString": "int_const 2000000000000000000"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2000000000000000000_by_1",
																"typeString": "int_const 2000000000000000000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 23,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "325:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "325:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "325:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "325:22:0"
											}
										]
									},
									"documentation": null,
									"id": 30,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendEnderAccount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "305:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:0:0"
									},
									"scope": 31,
									"src": "280:75:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 32,
							"src": "36:322:0"
						}
					],
					"src": "0:358:0"
				},
				"id": 0
			}
		}
	}
}