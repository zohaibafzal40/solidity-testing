{
	"id": "428a994e2c0ddb573981933757e8491d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"dynamicarray.sol": {
				"content": "pragma solidity^0.8.0;\r\n\r\ncontract Dynamicarry{\r\n\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"dynamicarray.sol": {
				"Dynamicarry": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"dynamicarray.sol\":26:58  contract Dynamicarry{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"dynamicarray.sol\":26:58  contract Dynamicarry{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122007060de7d65a5363810e90861c7f413de94ddf936fa144d9be211062e8d7fc8864736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122007060de7d65a5363810e90861c7f413de94ddf936fa144d9be211062e8d7fc8864736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD MOD 0xD 0xE7 0xD6 GAS MSTORE8 PUSH4 0x810E9086 SHR PUSH32 0x413DE94DDF936FA144D9BE211062E8D7FC8864736F6C634300080F0033000000 ",
							"sourceMap": "26:32:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122007060de7d65a5363810e90861c7f413de94ddf936fa144d9be211062e8d7fc8864736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD MOD 0xD 0xE7 0xD6 GAS MSTORE8 PUSH4 0x810E9086 SHR PUSH32 0x413DE94DDF936FA144D9BE211062E8D7FC8864736F6C634300080F0033000000 ",
							"sourceMap": "26:32:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 58,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 58,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 58,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 58,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 58,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 58,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 58,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 58,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 58,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 58,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 58,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122007060de7d65a5363810e90861c7f413de94ddf936fa144d9be211062e8d7fc8864736f6c634300080f0033",
									".code": [
										{
											"begin": 26,
											"end": 58,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 58,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 58,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 58,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 58,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 58,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"dynamicarray.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"dynamicarray.sol\":\"Dynamicarry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"dynamicarray.sol\":{\"keccak256\":\"0xb1b8c95f7504b3b239e8c591e5fdcee6e43ad99998c7c17ca59d13352c528836\",\"urls\":[\"bzz-raw://e5a088799d1f212b7ad09a763008f06055cce0281eb784ecf37f1b1f51058e0c\",\"dweb:/ipfs/QmaFMZ9abwLWqNzrfKYwpGo4qXMrXcbFtFGRvEexZHwmAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> dynamicarray.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "dynamicarray.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"dynamicarray.sol": {
				"ast": {
					"absolutePath": "dynamicarray.sol",
					"exportedSymbols": {
						"Dynamicarry": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Dynamicarry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Dynamicarry",
							"nameLocation": "35:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "26:32:0",
							"usedErrors": []
						}
					],
					"src": "0:58:0"
				},
				"id": 0
			}
		}
	}
}