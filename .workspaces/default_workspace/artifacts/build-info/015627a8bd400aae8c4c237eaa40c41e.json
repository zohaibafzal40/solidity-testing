{
	"id": "015627a8bd400aae8c4c237eaa40c41e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"rule6exp.sol": {
				"content": "pragma solidity^0.8.0;\r\n\r\ncontract ruleexp{}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"rule6exp.sol": {
				"ruleexp": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"rule6exp.sol\":26:44  contract ruleexp{} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"rule6exp.sol\":26:44  contract ruleexp{} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220daed0c656ece2ea954ab50be59cb6704e1ac1a7fd8768448f1ca6becc489e8ef64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220daed0c656ece2ea954ab50be59cb6704e1ac1a7fd8768448f1ca6becc489e8ef64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xED 0xC PUSH6 0x6ECE2EA954AB POP 0xBE MSIZE 0xCB PUSH8 0x4E1AC1A7FD87684 BASEFEE CALL 0xCA PUSH12 0xECC489E8EF64736F6C634300 ADDMOD 0xF STOP CALLER ",
							"sourceMap": "26:18:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220daed0c656ece2ea954ab50be59cb6704e1ac1a7fd8768448f1ca6becc489e8ef64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xED 0xC PUSH6 0x6ECE2EA954AB POP 0xBE MSIZE 0xCB PUSH8 0x4E1AC1A7FD87684 BASEFEE CALL 0xCA PUSH12 0xECC489E8EF64736F6C634300 ADDMOD 0xF STOP CALLER ",
							"sourceMap": "26:18:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220daed0c656ece2ea954ab50be59cb6704e1ac1a7fd8768448f1ca6becc489e8ef64736f6c634300080f0033",
									".code": [
										{
											"begin": 26,
											"end": 44,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 44,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 44,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 44,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 44,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 44,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"rule6exp.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"rule6exp.sol\":\"ruleexp\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"rule6exp.sol\":{\"keccak256\":\"0x15c511b4e8acbb1df2078d19649697b918c8d6b60a8999d2e76ec2330b1540f0\",\"urls\":[\"bzz-raw://4e6b0c504dc6a37ecdbbada0713ce29b0a8281218ff557141818e37df7ec8a58\",\"dweb:/ipfs/Qmesn82iV7WNbYEVZfQUxT623o6RaR2fNKVrMcapREK9sF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> rule6exp.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "rule6exp.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"rule6exp.sol": {
				"ast": {
					"absolutePath": "rule6exp.sol",
					"exportedSymbols": {
						"ruleexp": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ruleexp",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "ruleexp",
							"nameLocation": "35:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "26:18:0",
							"usedErrors": []
						}
					],
					"src": "0:44:0"
				},
				"id": 0
			}
		}
	}
}