{
	"id": "49069df7a565e42ef5bddab484f04abf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"rule8exp.sol": {
				"content": "pragma solidity^0.8.0;\r\n\r\ncontract rule8{\r\n    function assignment8() public returns (int) {\r\nint[2] memory rule8LocalVar1 = [int(1),2];  int[2] memory rule8LocalVar2 = [int(3),4];  rule8LocalVar1 = rule8LocalVar2;  rule8LocalVar2[1] = 10;\r\nreturn rule8LocalVar1[1];\t// returns 10\r\n}\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"rule8exp.sol": {
				"rule8": {
					"abi": [
						{
							"inputs": [],
							"name": "assignment8",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"rule8exp.sol\":26:288  contract rule8{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"rule8exp.sol\":26:288  contract rule8{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3855b677\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"rule8exp.sol\":47:283  function assignment8() public returns (int) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"rule8exp.sol\":86:89  int */\n      0x00\n        /* \"rule8exp.sol\":94:122  int[2] memory rule8LocalVar1 */\n      dup1\n        /* \"rule8exp.sol\":94:135  int[2] memory rule8LocalVar1 = [int(1),2] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"rule8exp.sol\":130:131  1 */\n      0x01\n        /* \"rule8exp.sol\":94:135  int[2] memory rule8LocalVar1 = [int(1),2] */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"rule8exp.sol\":133:134  2 */\n      0x02\n        /* \"rule8exp.sol\":94:135  int[2] memory rule8LocalVar1 = [int(1),2] */\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"rule8exp.sol\":138:166  int[2] memory rule8LocalVar2 */\n      0x00\n        /* \"rule8exp.sol\":138:179  int[2] memory rule8LocalVar2 = [int(3),4] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"rule8exp.sol\":174:175  3 */\n      0x03\n        /* \"rule8exp.sol\":138:179  int[2] memory rule8LocalVar2 = [int(3),4] */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"rule8exp.sol\":177:178  4 */\n      0x04\n        /* \"rule8exp.sol\":138:179  int[2] memory rule8LocalVar2 = [int(3),4] */\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"rule8exp.sol\":199:213  rule8LocalVar2 */\n      dup1\n        /* \"rule8exp.sol\":182:213  rule8LocalVar1 = rule8LocalVar2 */\n      swap2\n      pop\n        /* \"rule8exp.sol\":236:238  10 */\n      0x0a\n        /* \"rule8exp.sol\":216:230  rule8LocalVar2 */\n      dup2\n        /* \"rule8exp.sol\":231:232  1 */\n      0x01\n        /* \"rule8exp.sol\":216:233  rule8LocalVar2[1] */\n      0x02\n      dup2\n      lt\n      tag_9\n      jumpi\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n    tag_9:\n      0x20\n      mul\n      add\n        /* \"rule8exp.sol\":216:238  rule8LocalVar2[1] = 10 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"rule8exp.sol\":248:262  rule8LocalVar1 */\n      dup2\n        /* \"rule8exp.sol\":263:264  1 */\n      0x01\n        /* \"rule8exp.sol\":248:265  rule8LocalVar1[1] */\n      0x02\n      dup2\n      lt\n      tag_12\n      jumpi\n      tag_13\n      tag_11\n      jump\t// in\n    tag_13:\n    tag_12:\n      0x20\n      mul\n      add\n      mload\n        /* \"rule8exp.sol\":241:265  return rule8LocalVar1[1] */\n      swap3\n      pop\n      pop\n      pop\n        /* \"rule8exp.sol\":47:283  function assignment8() public returns (int) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:83   */\n    tag_14:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":72:77   */\n      dup2\n        /* \"#utility.yul\":61:77   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:83   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":89:204   */\n    tag_15:\n        /* \"#utility.yul\":174:197   */\n      tag_19\n        /* \"#utility.yul\":191:196   */\n      dup2\n        /* \"#utility.yul\":174:197   */\n      tag_14\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":169:172   */\n      dup3\n        /* \"#utility.yul\":162:198   */\n      mstore\n        /* \"#utility.yul\":89:204   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":210:428   */\n    tag_7:\n        /* \"#utility.yul\":301:305   */\n      0x00\n        /* \"#utility.yul\":339:341   */\n      0x20\n        /* \"#utility.yul\":328:337   */\n      dup3\n        /* \"#utility.yul\":324:342   */\n      add\n        /* \"#utility.yul\":316:342   */\n      swap1\n      pop\n        /* \"#utility.yul\":352:421   */\n      tag_21\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":352:421   */\n      tag_15\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":210:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:614   */\n    tag_11:\n        /* \"#utility.yul\":482:559   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":479:480   */\n      0x00\n        /* \"#utility.yul\":472:560   */\n      mstore\n        /* \"#utility.yul\":579:583   */\n      0x32\n        /* \"#utility.yul\":576:577   */\n      0x04\n        /* \"#utility.yul\":569:584   */\n      mstore\n        /* \"#utility.yul\":603:607   */\n      0x24\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":593:608   */\n      revert\n\n    auxdata: 0xa2646970667358221220296676b0c8680980d75c21ac82dc8667690a2ed573083422fa18ab480ccecea464736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610160806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633855b67714610030575b600080fd5b61003861004e565b60405161004591906100e0565b60405180910390f35b60008060405180604001604052806001815260200160028152509050600060405180604001604052806003815260200160048152509050809150600a8160016002811061009e5761009d6100fb565b5b602002018181525050816001600281106100bb576100ba6100fb565b5b60200201519250505090565b6000819050919050565b6100da816100c7565b82525050565b60006020820190506100f560008301846100d1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220296676b0c8680980d75c21ac82dc8667690a2ed573083422fa18ab480ccecea464736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x160 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3855B677 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP2 MSTORE POP SWAP1 POP DUP1 SWAP2 POP PUSH1 0xA DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x9E JUMPI PUSH2 0x9D PUSH2 0xFB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0xBB JUMPI PUSH2 0xBA PUSH2 0xFB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDA DUP2 PUSH2 0xC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 PUSH7 0x76B0C8680980D7 0x5C 0x21 0xAC DUP3 0xDC DUP7 PUSH8 0x690A2ED573083422 STATICCALL XOR 0xAB BASEFEE 0xC 0xCE 0xCE LOG4 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "26:262:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@assignment8_47": {
									"entryPoint": 78,
									"id": 47,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 251,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:617:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "51:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "61:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "72:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "43:7:1",
														"type": ""
													}
												],
												"src": "7:76:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "152:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "169:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "191:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "174:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "174:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "162:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "162:36:1"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "140:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "147:3:1",
														"type": ""
													}
												],
												"src": "89:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "316:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "328:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "339:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "324:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "324:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "316:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "352:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "352:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "352:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "278:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "290:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "301:4:1",
														"type": ""
													}
												],
												"src": "210:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "462:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "479:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "482:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "472:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "472:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "576:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "569:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "600:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "603:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "593:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "593:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "434:180:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80633855b67714610030575b600080fd5b61003861004e565b60405161004591906100e0565b60405180910390f35b60008060405180604001604052806001815260200160028152509050600060405180604001604052806003815260200160048152509050809150600a8160016002811061009e5761009d6100fb565b5b602002018181525050816001600281106100bb576100ba6100fb565b5b60200201519250505090565b6000819050919050565b6100da816100c7565b82525050565b60006020820190506100f560008301846100d1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220296676b0c8680980d75c21ac82dc8667690a2ed573083422fa18ab480ccecea464736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3855B677 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP2 MSTORE POP SWAP1 POP DUP1 SWAP2 POP PUSH1 0xA DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x9E JUMPI PUSH2 0x9D PUSH2 0xFB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0xBB JUMPI PUSH2 0xBA PUSH2 0xFB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDA DUP2 PUSH2 0xC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 PUSH7 0x76B0C8680980D7 0x5C 0x21 0xAC DUP3 0xDC DUP7 PUSH8 0x690A2ED573083422 STATICCALL XOR 0xAB BASEFEE 0xC 0xCE 0xCE LOG4 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "26:262:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47:236;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;86:3;94:28;:41;;;;;;;;130:1;94:41;;;;133:1;94:41;;;;;138:28;:41;;;;;;;;174:1;138:41;;;;177:1;138:41;;;;;199:14;182:31;;236:2;216:14;231:1;216:17;;;;;;;:::i;:::-;;;;;:22;;;;;248:14;263:1;248:17;;;;;;;:::i;:::-;;;;;;241:24;;;;47:236;:::o;7:76:1:-;43:7;72:5;61:16;;7:76;;;:::o;89:115::-;174:23;191:5;174:23;:::i;:::-;169:3;162:36;89:115;;:::o;210:218::-;301:4;339:2;328:9;324:18;316:26;;352:69;418:1;407:9;403:17;394:6;352:69;:::i;:::-;210:218;;;;:::o;434:180::-;482:77;479:1;472:88;579:4;576:1;569:15;603:4;600:1;593:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "70400",
								"executionCost": "117",
								"totalCost": "70517"
							},
							"external": {
								"assignment8()": "551"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 288,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 288,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 288,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 288,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 288,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 288,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 288,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 288,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 288,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 288,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 288,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 288,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 288,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 288,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 288,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 288,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 288,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 288,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 288,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 288,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 288,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220296676b0c8680980d75c21ac82dc8667690a2ed573083422fa18ab480ccecea464736f6c634300080f0033",
									".code": [
										{
											"begin": 26,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26,
											"end": 288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26,
											"end": 288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26,
											"end": 288,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 288,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26,
											"end": 288,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "3855B677"
										},
										{
											"begin": 26,
											"end": 288,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26,
											"end": 288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 288,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47,
											"end": 283,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47,
											"end": 283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 47,
											"end": 283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47,
											"end": 283,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47,
											"end": 283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47,
											"end": 283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 47,
											"end": 283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47,
											"end": 283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 47,
											"end": 283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47,
											"end": 283,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 47,
											"end": 283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47,
											"end": 283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47,
											"end": 283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47,
											"end": 283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47,
											"end": 283,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47,
											"end": 283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47,
											"end": 283,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 47,
											"end": 283,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 47,
											"end": 283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 89,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 94,
											"end": 135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 94,
											"end": 135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 94,
											"end": 135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 94,
											"end": 135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 94,
											"end": 135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 94,
											"end": 135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 94,
											"end": 135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 94,
											"end": 135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 131,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 94,
											"end": 135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 94,
											"end": 135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 94,
											"end": 135,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 94,
											"end": 135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 133,
											"end": 134,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 94,
											"end": 135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 94,
											"end": 135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 94,
											"end": 135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 94,
											"end": 135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 94,
											"end": 135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 138,
											"end": 166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 138,
											"end": 179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 138,
											"end": 179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 138,
											"end": 179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 138,
											"end": 179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 138,
											"end": 179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 138,
											"end": 179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 138,
											"end": 179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 138,
											"end": 179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 138,
											"end": 179,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 138,
											"end": 179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 138,
											"end": 179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 138,
											"end": 179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 138,
											"end": 179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 138,
											"end": 179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 199,
											"end": 213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 182,
											"end": 213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 236,
											"end": 238,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 216,
											"end": 230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 231,
											"end": 232,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 216,
											"end": 233,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 216,
											"end": 233,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 216,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 216,
											"end": 233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 216,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 216,
											"end": 233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 216,
											"end": 233,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 216,
											"end": 233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 216,
											"end": 233,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 216,
											"end": 233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 216,
											"end": 233,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 216,
											"end": 233,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 216,
											"end": 233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 216,
											"end": 238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 216,
											"end": 238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 216,
											"end": 238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 216,
											"end": 238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 216,
											"end": 238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 248,
											"end": 262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 248,
											"end": 265,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 248,
											"end": 265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 248,
											"end": 265,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 248,
											"end": 265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 248,
											"end": 265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 248,
											"end": 265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 248,
											"end": 265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 248,
											"end": 265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 248,
											"end": 265,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 248,
											"end": 265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 248,
											"end": 265,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 248,
											"end": 265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 248,
											"end": 265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 265,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 248,
											"end": 265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 248,
											"end": 265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 241,
											"end": 265,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 241,
											"end": 265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 241,
											"end": 265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 241,
											"end": 265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47,
											"end": 283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47,
											"end": 283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 83,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 7,
											"end": 83,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 77,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 61,
											"end": 77,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 77,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 83,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 83,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 83,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 83,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 89,
											"end": 204,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 89,
											"end": 204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 174,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 191,
											"end": 196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 174,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 174,
											"end": 197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 174,
											"end": 197,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 174,
											"end": 197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 162,
											"end": 198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 89,
											"end": 204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 89,
											"end": 204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 89,
											"end": 204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 210,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 210,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 301,
											"end": 305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 341,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 324,
											"end": 342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 316,
											"end": 342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 316,
											"end": 342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 352,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 352,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 352,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 352,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 352,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 210,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 210,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 210,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 210,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 210,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 614,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 434,
											"end": 614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 482,
											"end": 559,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 479,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 579,
											"end": 583,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 576,
											"end": 577,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 569,
											"end": 584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 603,
											"end": 607,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 608,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"rule8exp.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"assignment8()": "3855b677"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"assignment8\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"rule8exp.sol\":\"rule8\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"rule8exp.sol\":{\"keccak256\":\"0xf80cf6f790d00aecdf4bc1d87165bbcecb299dbcc94016d4f65cf9566e62ef51\",\"urls\":[\"bzz-raw://94a9cd4f4cdfa0fb0465ab1781bb1d3be4b830095ba5a2f612fcdfaaf6e7c39e\",\"dweb:/ipfs/Qmd1igHH8ApYS3LP3rdCSjnqmLztSnqqRrWXLTk23292iP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> rule8exp.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "rule8exp.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n --> rule8exp.sol:4:5:\n  |\n4 |     function assignment8() public returns (int) {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 283,
					"file": "rule8exp.sol",
					"start": 47
				},
				"type": "Warning"
			}
		],
		"sources": {
			"rule8exp.sol": {
				"ast": {
					"absolutePath": "rule8exp.sol",
					"exportedSymbols": {
						"rule8": [
							48
						]
					},
					"id": 49,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "rule8",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 48,
							"linearizedBaseContracts": [
								48
							],
							"name": "rule8",
							"nameLocation": "35:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "91:192:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "rule8LocalVar1",
														"nameLocation": "108:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 46,
														"src": "94:28:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int256_$2_memory_ptr",
															"typeString": "int256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 9,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "94:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 10,
															"length": {
																"hexValue": "32",
																"id": 8,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "98:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "94:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int256_$2_storage_ptr",
																"typeString": "int256[2]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 18,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 14,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "130:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "126:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 12,
																	"name": "int",
																	"nodeType": "ElementaryTypeName",
																	"src": "126:3:0",
																	"typeDescriptions": {}
																}
															},
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "126:6:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"hexValue": "32",
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "133:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"id": 17,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "125:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$2_memory_ptr",
														"typeString": "int256[2] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "94:41:0"
											},
											{
												"assignments": [
													24
												],
												"declarations": [
													{
														"constant": false,
														"id": 24,
														"mutability": "mutable",
														"name": "rule8LocalVar2",
														"nameLocation": "152:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 46,
														"src": "138:28:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int256_$2_memory_ptr",
															"typeString": "int256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 22,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "138:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 23,
															"length": {
																"hexValue": "32",
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "142:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "138:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int256_$2_storage_ptr",
																"typeString": "int256[2]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 31,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"hexValue": "33",
																	"id": 27,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "174:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	}
																],
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "170:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 25,
																	"name": "int",
																	"nodeType": "ElementaryTypeName",
																	"src": "170:3:0",
																	"typeDescriptions": {}
																}
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "170:6:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"hexValue": "34",
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "177:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														}
													],
													"id": 30,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "169:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$2_memory_ptr",
														"typeString": "int256[2] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "138:41:0"
											},
											{
												"expression": {
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 32,
														"name": "rule8LocalVar1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "182:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int256_$2_memory_ptr",
															"typeString": "int256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 33,
														"name": "rule8LocalVar2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "199:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int256_$2_memory_ptr",
															"typeString": "int256[2] memory"
														}
													},
													"src": "182:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$2_memory_ptr",
														"typeString": "int256[2] memory"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "182:31:0"
											},
											{
												"expression": {
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 36,
															"name": "rule8LocalVar2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "216:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int256_$2_memory_ptr",
																"typeString": "int256[2] memory"
															}
														},
														"id": 38,
														"indexExpression": {
															"hexValue": "31",
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "231:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "216:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130",
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "236:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "216:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "216:22:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 42,
														"name": "rule8LocalVar1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "248:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int256_$2_memory_ptr",
															"typeString": "int256[2] memory"
														}
													},
													"id": 44,
													"indexExpression": {
														"hexValue": "31",
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "263:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "248:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5,
												"id": 45,
												"nodeType": "Return",
												"src": "241:24:0"
											}
										]
									},
									"functionSelector": "3855b677",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "assignment8",
									"nameLocation": "56:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "67:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "86:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "86:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "85:5:0"
									},
									"scope": 48,
									"src": "47:236:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 49,
							"src": "26:262:0",
							"usedErrors": []
						}
					],
					"src": "0:288:0"
				},
				"id": 0
			}
		}
	}
}