{
	"id": "786fb6dbd88933cc433f3e948b342ffe",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"while.sol": {
				"content": "// SPDX-License-identifier: MIT-3.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract While{\r\n\r\n    uint data;\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"while.sol": {
				"While": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"while.sol\":66:104  contract While{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"while.sol\":66:104  contract While{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220628ae693813f9f4efbb342e88fbac89bc8aae6aa443b9bc2f3b14b92dae6460d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220628ae693813f9f4efbb342e88fbac89bc8aae6aa443b9bc2f3b14b92dae6460d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x8AE693 DUP2 EXTCODEHASH SWAP16 0x4E 0xFB 0xB3 TIMESTAMP 0xE8 DUP16 0xBA 0xC8 SWAP12 0xC8 0xAA 0xE6 0xAA DIFFICULTY EXTCODESIZE SWAP12 0xC2 RETURN 0xB1 0x4B SWAP3 0xDA 0xE6 CHAINID 0xD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "66:38:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220628ae693813f9f4efbb342e88fbac89bc8aae6aa443b9bc2f3b14b92dae6460d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x8AE693 DUP2 EXTCODEHASH SWAP16 0x4E 0xFB 0xB3 TIMESTAMP 0xE8 DUP16 0xBA 0xC8 SWAP12 0xC8 0xAA 0xE6 0xAA DIFFICULTY EXTCODESIZE SWAP12 0xC2 RETURN 0xB1 0x4B SWAP3 0xDA 0xE6 CHAINID 0xD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "66:38:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 104,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 104,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 104,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 104,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 104,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 66,
									"end": 104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 104,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 66,
									"end": 104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 104,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 66,
									"end": 104,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66,
									"end": 104,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66,
									"end": 104,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 104,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 104,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 104,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220628ae693813f9f4efbb342e88fbac89bc8aae6aa443b9bc2f3b14b92dae6460d64736f6c63430008070033",
									".code": [
										{
											"begin": 66,
											"end": 104,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 104,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"while.sol\":\"While\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"while.sol\":{\"keccak256\":\"0x45d488ad63bf0335c24f71b87f6da0535554e0a237f795371ee195048262edfe\",\"urls\":[\"bzz-raw://c3cda096f8c0afc570920b7c75a51b6f9fe0de4aa86d566d8dbfa9bf94681d6f\",\"dweb:/ipfs/QmTDqS9DnVsuAZFVbZHhYt7bYzUWkGXRxyqyK9HyCZHs1F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "while.sol:While",
								"label": "data",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> while.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "while.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"while.sol": {
				"ast": {
					"absolutePath": "while.sol",
					"exportedSymbols": {
						"While": [
							4
						]
					},
					"id": 5,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 4,
							"linearizedBaseContracts": [
								4
							],
							"name": "While",
							"nameLocation": "75:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "94:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 4,
									"src": "89:9:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "89:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 5,
							"src": "66:38:0",
							"usedErrors": []
						}
					],
					"src": "39:65:0"
				},
				"id": 0
			}
		}
	}
}