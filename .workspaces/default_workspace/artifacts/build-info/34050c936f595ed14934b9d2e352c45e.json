{
	"id": "34050c936f595ed14934b9d2e352c45e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"rule8exp.sol": {
				"content": "pragma solidity^0.8.0;\r\n\r\ncontract rule8{}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"rule8exp.sol": {
				"rule8": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"rule8exp.sol\":26:42  contract rule8{} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"rule8exp.sol\":26:42  contract rule8{} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206a2063ac723e60cedaf6c331cc62926fda08cb41e50e96e630826c6c29a8045964736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212206a2063ac723e60cedaf6c331cc62926fda08cb41e50e96e630826c6c29a8045964736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x2063AC723E60CEDAF6C331 0xCC PUSH3 0x926FDA ADDMOD 0xCB COINBASE 0xE5 0xE SWAP7 0xE6 ADDRESS DUP3 PUSH13 0x6C29A8045964736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "26:16:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212206a2063ac723e60cedaf6c331cc62926fda08cb41e50e96e630826c6c29a8045964736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x2063AC723E60CEDAF6C331 0xCC PUSH3 0x926FDA ADDMOD 0xCB COINBASE 0xE5 0xE SWAP7 0xE6 ADDRESS DUP3 PUSH13 0x6C29A8045964736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "26:16:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 42,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 42,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 42,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 42,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 42,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 42,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 42,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 42,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 42,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 42,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 42,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 42,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 42,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 42,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 42,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 42,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 42,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 42,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 42,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 42,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 42,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206a2063ac723e60cedaf6c331cc62926fda08cb41e50e96e630826c6c29a8045964736f6c634300080f0033",
									".code": [
										{
											"begin": 26,
											"end": 42,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 42,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 42,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 42,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 42,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 42,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"rule8exp.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"rule8exp.sol\":\"rule8\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"rule8exp.sol\":{\"keccak256\":\"0x1f37bb27c666269807f30595d1187a359a2495b8938f4c8cf9f39240e6c78bd9\",\"urls\":[\"bzz-raw://1d3398bb31251fd2152b8890d329eab53b9a69da0baba28e5375dec456d7f309\",\"dweb:/ipfs/QmUmAKHuDGPkoSMZZQ9knn7sQTcrGvbB3MEVZMJtgRRFKY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> rule8exp.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "rule8exp.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"rule8exp.sol": {
				"ast": {
					"absolutePath": "rule8exp.sol",
					"exportedSymbols": {
						"rule8": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "rule8",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "rule8",
							"nameLocation": "35:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "26:16:0",
							"usedErrors": []
						}
					],
					"src": "0:42:0"
				},
				"id": 0
			}
		}
	}
}