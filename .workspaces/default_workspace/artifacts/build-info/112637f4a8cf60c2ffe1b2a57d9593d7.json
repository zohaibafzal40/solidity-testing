{
	"id": "112637f4a8cf60c2ffe1b2a57d9593d7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"dynamicarray.sol": {
				"content": "pragma solidity^0.8.0;\r\n\r\ncontract Dynamicarry{\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"dynamicarray.sol": {
				"Dynamicarry": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"dynamicarray.sol\":26:56  contract Dynamicarry{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"dynamicarray.sol\":26:56  contract Dynamicarry{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d39d5fbf2c879e0651a637aeb410a07352128fa8f3093e02b46c09941092c66764736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220d39d5fbf2c879e0651a637aeb410a07352128fa8f3093e02b46c09941092c66764736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SWAP14 0x5F 0xBF 0x2C DUP8 SWAP15 MOD MLOAD 0xA6 CALLDATACOPY 0xAE 0xB4 LT LOG0 PUSH20 0x52128FA8F3093E02B46C09941092C66764736F6C PUSH4 0x4300080F STOP CALLER ",
							"sourceMap": "26:30:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220d39d5fbf2c879e0651a637aeb410a07352128fa8f3093e02b46c09941092c66764736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SWAP14 0x5F 0xBF 0x2C DUP8 SWAP15 MOD MLOAD 0xA6 CALLDATACOPY 0xAE 0xB4 LT LOG0 PUSH20 0x52128FA8F3093E02B46C09941092C66764736F6C PUSH4 0x4300080F STOP CALLER ",
							"sourceMap": "26:30:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 56,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 56,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 56,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 56,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 56,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 56,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 56,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d39d5fbf2c879e0651a637aeb410a07352128fa8f3093e02b46c09941092c66764736f6c634300080f0033",
									".code": [
										{
											"begin": 26,
											"end": 56,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 56,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 56,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 56,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 56,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 56,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"dynamicarray.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"dynamicarray.sol\":\"Dynamicarry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"dynamicarray.sol\":{\"keccak256\":\"0x32af7cf57615791b9fb27688999fd8f6ec5f4b2a374e3141fec527c912f608f3\",\"urls\":[\"bzz-raw://bee2cbc3bfe880bfaf2e865bce5e8b4eef57f07fe0b2e10bc8c9b9ace1f90116\",\"dweb:/ipfs/QmUHBSbnajMMfjRzYiNamBTVY4uap7LrHCr5KwvMcbvaoY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> dynamicarray.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "dynamicarray.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"dynamicarray.sol": {
				"ast": {
					"absolutePath": "dynamicarray.sol",
					"exportedSymbols": {
						"Dynamicarry": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Dynamicarry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Dynamicarry",
							"nameLocation": "35:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "26:30:0",
							"usedErrors": []
						}
					],
					"src": "0:56:0"
				},
				"id": 0
			}
		}
	}
}