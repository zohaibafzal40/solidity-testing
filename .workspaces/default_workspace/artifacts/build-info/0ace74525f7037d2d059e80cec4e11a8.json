{
	"id": "0ace74525f7037d2d059e80cec4e11a8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"while.sol": {
				"content": "// SPDX-License-identifier: MIT-3.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract While{}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"while.sol": {
				"While": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"while.sol\":66:82  contract While{} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"while.sol\":66:82  contract While{} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220de0cc3d02f2e443a5d12eab909580a81642b8b06fe9aa2915ac64bedf63ecbae64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220de0cc3d02f2e443a5d12eab909580a81642b8b06fe9aa2915ac64bedf63ecbae64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xC 0xC3 0xD0 0x2F 0x2E DIFFICULTY GASPRICE 0x5D SLT 0xEA 0xB9 MULMOD PC EXP DUP2 PUSH5 0x2B8B06FE9A LOG2 SWAP2 GAS 0xC6 0x4B 0xED 0xF6 RETURNDATACOPY 0xCB 0xAE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "66:16:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220de0cc3d02f2e443a5d12eab909580a81642b8b06fe9aa2915ac64bedf63ecbae64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xC 0xC3 0xD0 0x2F 0x2E DIFFICULTY GASPRICE 0x5D SLT 0xEA 0xB9 MULMOD PC EXP DUP2 PUSH5 0x2B8B06FE9A LOG2 SWAP2 GAS 0xC6 0x4B 0xED 0xF6 RETURNDATACOPY 0xCB 0xAE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "66:16:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 82,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 82,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 82,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 82,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 82,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 82,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 66,
									"end": 82,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 82,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 66,
									"end": 82,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 82,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 82,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 66,
									"end": 82,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 82,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66,
									"end": 82,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66,
									"end": 82,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 82,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 82,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 82,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 82,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 82,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 82,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220de0cc3d02f2e443a5d12eab909580a81642b8b06fe9aa2915ac64bedf63ecbae64736f6c63430008070033",
									".code": [
										{
											"begin": 66,
											"end": 82,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 82,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 82,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 82,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 82,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 82,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"while.sol\":\"While\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"while.sol\":{\"keccak256\":\"0xca25eb2a2a568937eb3af0abfb0b8292ae9ea9094492d06175122ed481219197\",\"urls\":[\"bzz-raw://370b283417d0a31bfac3f2d2e9f2bee60a177a3aa73473ca83e1592579851a29\",\"dweb:/ipfs/Qme9Q1RAe5sq47NShSpo4UDrzvafHof3WGkhm4Js4hkcHV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> while.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "while.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"while.sol": {
				"ast": {
					"absolutePath": "while.sol",
					"exportedSymbols": {
						"While": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "While",
							"nameLocation": "75:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "66:16:0",
							"usedErrors": []
						}
					],
					"src": "39:43:0"
				},
				"id": 0
			}
		}
	}
}